Building Angel on Linux
------------------------------------------------------------------------------
Angel has been tested on Ubuntu 9.04 and Fedora Core 10. It should 
probably build on other recent distributions as long as all of the 
dependencies are installed.

Dependencies:
-------------
For Ubuntu 9.10, the following command will install the appropriate 
dependencies:
sudo apt-get -y install build-essential swig libglu1-mesa-dev \
	libfreeimage-dev python-dev libxrandr-dev libfreetype6-dev joystick

For Fedora Core 10, the following command will install the appropriate 
dependencies:
sudo yum -y install gcc-c++ swig mesa-libGLU-devel freeimage-devel \
	python-devel libXrandr-devel freetype-devel

Compiling:
----------
 1. To compile the Angel library, cd into the "Angel" directory and 
    simply type "make".
 2. After the Angel library is successfully built, the ClientGame and 
    IntroGame applications can be built. To do so, cd into the appropriate 
    directory (ClientGame or IntroGame) and type "make".

Notes:
------
While we believe all functionality should be present on Linux, it has not
been thoroughly tested. If you find anything that works differently than
on the Windows or Mac builds, please file bugs at:

  http://code.google.com/p/angel-engine/issues/list

Known Differences:
------------------
The following list represents the current known differences in the Linux
build.

 * No publish script. Due to the massive number of configuration 
   possibilities, we don't currently have a script that bundles all the data
   and code files together for simple one-directory distribution. The 
   publish.py and publish-mac.py scripts in the Tools/BuildScripts directory
   represent reasonable templates from which someone could start that work.
 * Rather than using the version of FreeType included with the distribution,
   the Linux build relies on the developer and user already having FreeType
   on their systems. Since this is a very stable API and practically all 
   Linux distributions include it, we believe this is safe. 

Known Problems and Work-arounds:
--------------------------------
 * You may see the following error message when starting an Angel
   application:

   FMOD error! (77) This command failed because System::init or 
   System::setDriver was not called. 

   IntroGame: Infrastructure/SoundDevice.cpp:41: void 
   ERRCHECK(FMOD_RESULT): Assertion `0' failed. 
   Aborted

   This is likely due to FMOD failing to autodetect your audio subsystem.
   The automatic sound subsystem detection can be overriden by setting an
   environment variable, FMOD_OUTPUTTYPE.  The possible override choices are:
   ALSA, OSS, ESD, and NOSOUND.  For example, to set the environment variable
   (if using the bash shell), use the following command:
       export FMOD_OUTPUTTYPE="ALSA"  
