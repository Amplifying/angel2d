Building Angel on Linux
------------------------------------------------------------------------------
Angel has been tested on Ubuntu 10.04 LTS and Fedora Core 12. It should 
probably build on other recent distributions as long as all of the 
dependencies are installed.

Dependencies:
-------------
For Ubuntu and Fedora, run Code/Angel/nix-prereqs.sh to automatically install
all the necessary dependencies. Note that the script must be run as root or 
at least with appropriate sudo privileges. 

For reference purposes (and for anyone trying to get Angel running on another
distribution), the script installs:
 * GCC, G++, and the associated build commands like make
 * SWIG
 * OpenGL development headers (plus the GLU library and its headers)
 * readline development headers
 * DevIL and its development headers
 * X RandR development headers (required by GLFW)
 * freetype development headers
 * joystick library (on Ubuntu)

Compiling:
----------
 1. To compile the Angel library, cd into the "Angel" directory and 
    simply type "make".
 2. After the Angel library is successfully built, the ClientGame and 
    IntroGame applications can be built. To do so, cd into the appropriate 
    directory (ClientGame or IntroGame) and type "make".

Notes:
------
While we believe all functionality should be present on Linux, it has not
been thoroughly tested. If you find anything that works differently than
on the Windows or Mac builds, please file bugs at:

  http://code.google.com/p/angel-engine/issues/list

Known Differences:
------------------
The following list represents the current known differences in the Linux
build.

 * No publish script. Due to the massive number of configuration 
   possibilities, we don't currently have a script that bundles all the data
   and code files together for simple one-directory distribution. The 
   publish.lua and publish-mac.lua scripts in the Tools/BuildScripts 
   directory represent reasonable templates from which someone could start 
   that work. There's also a decent exploration of the issues involved and 
   various workarounds here: 

   http://www.gamedev.net/reference/programming/features/linuxprogramming2/

 * Rather than using the version of FreeType included with the distribution,
   the Linux build relies on the developer and user already having FreeType
   on their systems. Since this is a very stable API and practically all 
   Linux distributions include it, we believe this is safe. 

Known Problems and Work-arounds:
--------------------------------
 * You may see the following error message when starting an Angel
   application:

   FMOD error! (77) This command failed because System::init or 
   System::setDriver was not called. 

   IntroGame: Infrastructure/SoundDevice.cpp:41: void 
   ERRCHECK(FMOD_RESULT): Assertion `0' failed. 
   Aborted

   This is likely due to FMOD failing to autodetect your audio subsystem.
   The automatic sound subsystem detection can be overriden by setting an
   environment variable, FMOD_OUTPUTTYPE. The possible override choices are:
   ALSA, OSS, ESD, and NOSOUND. For example, to set the environment variable
   (if using the bash shell), use the following command:
       export FMOD_OUTPUTTYPE="ALSA"

 * On certain processors, Angel applications may crash with "Illegal 
   instruction" errors. This is likely due to the fact that the DevIL 
   library in most distributions is compiled to use SSE1, SSE2, and SSE3 
   instructions. Some processors do not support these instructions and the 
   program will crash. If you see this error, the recommended work-around is 
   to download and compile your own version of DevIL from 
   http://openil.sourceforge.net/. To disable all SSE instructions, add 
   "--disable-asm" when using the configure script.

 * On Fedora systems, Angel and SELinux do not get along. Be prepared to 
   create exceptions for your Angel programs or disable SELinux altogether.

